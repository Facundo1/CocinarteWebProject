import React, { Fragment } from 'react'
import ListItem from '../ListItem'
import PropTypes from 'prop-types'
import jsPDF from 'jspdf'
import 'jspdf-autotable'

const List = ({ items, handleRemove }) => {
  const task_names = []
  items.forEach(element => {
    var temp = [element.name]
    task_names.push(temp)
  })

  const GenerarPdf = () => {
    var meses = new Array(
      'Enero',
      'Febrero',
      'Marzo',
      'Abril',
      'Mayo',
      'Junio',
      'Julio',
      'Agosto',
      'Septiembre',
      'Octubre',
      'Noviembre',
      'Diciembre'
    )
    let f = new Date()
    const date =
      f.getDate() + ' de ' + meses[f.getMonth()] + ' de ' + f.getFullYear()
    var img = new Image()
    img =
      ''

    var doc = new jsPDF({
      unit: 'in',
      format: [11.69, 8.27]
    })

    doc.addImage(img, 'jpg', 0.5, 0.4, 2.5, 1.4)
    doc.text(`Fecha: ${date}`, 4.5, 1.5)

    doc.autoTable({
      head: [['Lista de productos necesarios']],
      margin: { top: 2 },
      body: task_names
    })

    doc.text(
      `________________________________________________________`,
      0.5,
      11
    )

    doc.save(`ListaDeSuper`)
  }

  return (
    <Fragment>
      {items.map(item => {
        return (
          <ListItem key={item.id} item={item} handleRemove={handleRemove} />
        )
      })}
      <div className='d-flex justify-content-center'>
        <button
          className='btn btn-warning font-weight-bold text-dark rounded '
          onClick={GenerarPdf}
        >
          Generar imprimible
        </button>
      </div>
    </Fragment>
  )
}

List.propTypes = {
  items: PropTypes.array.isRequired,
  handleRemove: PropTypes.func.isRequired
}

export default List
